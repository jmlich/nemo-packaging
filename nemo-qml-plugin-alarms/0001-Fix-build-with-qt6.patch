From 9a8d95528cf1cfe1b07c9dcd17ec6658a73bafab Mon Sep 17 00:00:00 2001
From: Jozef Mlich <jmlich83@gmail.com>
Date: Fri, 11 Aug 2023 07:20:33 +0000
Subject: [PATCH] Fix build with qt6

---
 .gitignore                      |  1 +
 src/alarmdialogobject.cpp       |  4 ++++
 src/alarmhandlerinterface.h     |  5 +++++
 src/alarmobject.cpp             | 22 ++++++++++++++++++++--
 src/alarmobject.h               |  9 +++++++++
 src/alarmsbackendmodel_p.cpp    |  4 ++--
 src/enabledalarmsproxymodel.cpp |  4 ++++
 src/interface.h                 |  5 ++++-
 src/src.pro                     |  2 +-
 tests/common.pri                |  2 +-
 tests/tests.pro                 |  4 ++--
 11 files changed, 53 insertions(+), 9 deletions(-)

diff --git a/.gitignore b/.gitignore
index 8229377..6874483 100644
--- a/.gitignore
+++ b/.gitignore
@@ -3,3 +3,4 @@
 moc_*
 *.moc
 Makefile
+.qmake.stash
diff --git a/src/alarmdialogobject.cpp b/src/alarmdialogobject.cpp
index db0316c..830a301 100644
--- a/src/alarmdialogobject.cpp
+++ b/src/alarmdialogobject.cpp
@@ -32,7 +32,11 @@
 
 #include "alarmdialogobject.h"
 #include "interface.h"
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#include <timed-voland-qt6/reminder>
+#else
 #include <timed-voland-qt5/reminder>
+#endif
 #include <QDBusPendingReply>
 #include <QDBusPendingCallWatcher>
 
diff --git a/src/alarmhandlerinterface.h b/src/alarmhandlerinterface.h
index 1f54ee1..2cdc477 100644
--- a/src/alarmhandlerinterface.h
+++ b/src/alarmhandlerinterface.h
@@ -35,7 +35,12 @@
 
 #include <QtGlobal>
 #include <QDBusAbstractAdaptor>
+
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#include <timed-voland-qt6/interface>
+#else
 #include <timed-voland-qt5/interface>
+#endif
 
 class VolandAdaptor;
 class VolandSignalAdaptor;
diff --git a/src/alarmobject.cpp b/src/alarmobject.cpp
index bd16a20..284aa26 100644
--- a/src/alarmobject.cpp
+++ b/src/alarmobject.cpp
@@ -35,8 +35,13 @@
 #include <QDBusPendingReply>
 #include <QDebug>
 
-# include <timed-qt5/event>
-# include <timed-qt5/exception>
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#include <timed-qt6/event>
+#include <timed-qt6/exception>
+#else
+#include <timed-qt5/event>
+#include <timed-qt5/exception>
+#endif
 
 /*!
  *  \qmlproperty string Alarm::title
@@ -261,7 +266,11 @@ AlarmObject::AlarmObject(const QMap<QString,QString> &data, QObject *parent)
 
     if (m_enabled && m_countdown) {
         // Timer is running
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+        qint64 now = QDateTime::currentDateTimeUtc().toSecsSinceEpoch();
+#else
         uint now = QDateTime::currentDateTimeUtc().toTime_t();
+#endif
         m_elapsed = m_triggerTime - now;
     }
 }
@@ -569,11 +578,20 @@ void AlarmObject::save()
             QDateTime now = QDateTime::currentDateTimeUtc();
             if (m_enabled) {
                 QDateTime triggerDateTime = now.addSecs(duration - m_elapsed);
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+                m_triggerTime = triggerDateTime.toSecsSinceEpoch();
+                ev.setTicker(triggerDateTime.toSecsSinceEpoch());
+#else
                 m_triggerTime = triggerDateTime.toTime_t();
                 ev.setTicker(triggerDateTime.toTime_t());
+#endif
             } else {
                 if (m_triggerTime > 0) {
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+                    m_elapsed = (duration - (m_triggerTime - now.toSecsSinceEpoch()));
+#else
                     m_elapsed = (duration - (m_triggerTime - now.toTime_t()));
+#endif
                     m_triggerTime = 0;
                 } else {
                     m_elapsed = 0;
diff --git a/src/alarmobject.h b/src/alarmobject.h
index 5e1447e..ccf2fb2 100644
--- a/src/alarmobject.h
+++ b/src/alarmobject.h
@@ -100,7 +100,11 @@ public:
 
     uint triggerTime() const { return m_triggerTime; }
 
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    qint64 getElapsed() const { return m_elapsed; }
+#else
     int getElapsed() const { return m_elapsed; }
+#endif
 
     int type() const;
 
@@ -157,8 +161,13 @@ protected:
     QDateTime m_createdDate;
     bool m_countdown;
     bool m_reminder;
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    qint64 m_triggerTime;
+    qint64 m_elapsed;
+#else
     uint m_triggerTime;
     uint m_elapsed;
+#endif
     QDateTime m_startDate, m_endDate;
     QString m_uid;
     QString m_recurrenceId;
diff --git a/src/alarmsbackendmodel_p.cpp b/src/alarmsbackendmodel_p.cpp
index f0675b0..e2e1b4a 100644
--- a/src/alarmsbackendmodel_p.cpp
+++ b/src/alarmsbackendmodel_p.cpp
@@ -165,12 +165,12 @@ void AlarmsBackendModelPriv::alarmUpdated(AlarmObject *alarm)
 {
     int currentRow = alarms.indexOf(alarm);
 
-    // qLowerBounds expects that the list is sorted, we do not know if that is the case after
+    // std::lower_bound expects that the list is sorted, we do not know if that is the case after
     // the alarm has changed. Remove it temporarily from the list while calculating new row.
     if (currentRow >= 0)
         alarms.removeAt(currentRow);
 
-    QList<AlarmObject*>::iterator it = qLowerBound(alarms.begin(), alarms.end(), alarm, alarmSort);
+    QList<AlarmObject*>::iterator it = std::lower_bound(alarms.begin(), alarms.end(), alarm, alarmSort);
     int newRow = it - alarms.begin();
 
     if (currentRow >= 0)
diff --git a/src/enabledalarmsproxymodel.cpp b/src/enabledalarmsproxymodel.cpp
index c406ce4..d5c7b86 100644
--- a/src/enabledalarmsproxymodel.cpp
+++ b/src/enabledalarmsproxymodel.cpp
@@ -38,7 +38,11 @@ EnabledAlarmsProxyModel::EnabledAlarmsProxyModel(QObject *parent)
     : QSortFilterProxyModel(parent)
 {
     setFilterRole(AlarmsBackendModel::EnabledRole);
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    setFilterRegularExpression(QRegularExpression("true"));
+#else
     setFilterRegExp(QRegExp("true"));
+#endif
 }
 
 QObject *EnabledAlarmsProxyModel::model() const
diff --git a/src/interface.h b/src/interface.h
index b9d68d6..159249e 100644
--- a/src/interface.h
+++ b/src/interface.h
@@ -37,8 +37,11 @@
 #include <QtGlobal>
 #include <QMap>
 
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#include <timed-qt6/interface>
+#else
 #include <timed-qt5/interface>
-
+#endif
 class QTimer;
 
 class TimedInterface : public Maemo::Timed::Interface
diff --git a/src/src.pro b/src/src.pro
index 0bddffa..802c2c4 100644
--- a/src/src.pro
+++ b/src/src.pro
@@ -17,7 +17,7 @@ qmltypes.commands = qmlplugindump -nonrelocatable Nemo.Alarms 1.0 > $$PWD/plugin
 QMAKE_EXTRA_TARGETS += qmltypes
 
 CONFIG += link_pkgconfig
-PKGCONFIG += timed-qt5 timed-voland-qt5
+PKGCONFIG += timed-qt$${QT_MAJOR_VERSION} timed-voland-qt$${QT_MAJOR_VERSION}
 
 isEmpty(SRCDIR) SRCDIR = "."
 
diff --git a/tests/common.pri b/tests/common.pri
index 018a700..e2673c3 100644
--- a/tests/common.pri
+++ b/tests/common.pri
@@ -9,5 +9,5 @@ CONFIG -= app_bundle
 
 DEFINES += USE_VOLAND_TEST_INTERFACE
 
-target.path = /opt/tests/nemo-qml-plugins-qt5/alarms
+target.path = /opt/tests/nemo-qml-plugins-qt$${QT_MAJOR_VERSION}/alarms
 
diff --git a/tests/tests.pro b/tests/tests.pro
index 972565b..fb2db76 100644
--- a/tests/tests.pro
+++ b/tests/tests.pro
@@ -1,5 +1,5 @@
-PACKAGENAME = nemo-qml-plugin-alarms-qt5
-INSTALLLOCATION = /opt/tests/nemo-qml-plugins-qt5/alarms
+PACKAGENAME = nemo-qml-plugin-alarms-qt$${QT_MAJOR_VERSION}
+INSTALLLOCATION = /opt/tests/nemo-qml-plugins-qt$${QT_MAJOR_VERSION}/alarms
 
 TEMPLATE = subdirs
 SUBDIRS = tst_alarmsbackendmodel \
-- 
2.41.0

