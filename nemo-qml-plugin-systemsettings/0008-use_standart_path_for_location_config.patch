diff --git a/src/locationsettings.cpp b/src/locationsettings.cpp
index 100ed29..bd9ca78 100644
--- a/src/locationsettings.cpp
+++ b/src/locationsettings.cpp
@@ -33,10 +33,12 @@
 #include "locationsettings.h"
 #include "locationsettings_p.h"
 
+#include <QStandardPaths>
 #include <QFile>
 #include <QTimer>
 #include <QDebug>
 
+#include <QDir>
 #include <networkmanager.h>
 #include <networktechnology.h>
 
@@ -48,9 +50,8 @@ namespace {
     const QString LocationSettingsDeprecatedHereAgreementAcceptedKey = QStringLiteral("agreement_accepted");
 
     const QString PoweredPropertyName = QStringLiteral("Powered");
-    const QString LocationSettingsDir = QStringLiteral("/var/lib/location/");
-    const QString LocationSettingsFile = QStringLiteral("/var/lib/location/location.conf");
-    const QString CompatibilitySettingsFile = QStringLiteral("/etc/location/location.conf");
+    const QString LocationSettingsDir = QStandardPaths::writableLocation(QStandardPaths::ConfigLocation) + "/location/";
+    const QString LocationSettingsFile = QStandardPaths::writableLocation(QStandardPaths::ConfigLocation) + "/location/location.conf";
     const QString LocationSettingsSection = QStringLiteral("location");
     const QString LocationSettingsEnabledKey = QStringLiteral("enabled");
     const QString LocationSettingsCustomModeKey = QStringLiteral("custom_mode");
@@ -777,12 +778,16 @@ void LocationSettingsPrivate::writeSettings()
     // new file would be owned by creating process uid. we cannot allow this since the access is handled with group
     if (!QFile(LocationSettingsFile).exists()) {
         qWarning() << "Location settings configuration file does not exist. Refusing to create new.";
-        return;
+        QDir locationSettingsDir(LocationSettingsDir);
+        locationSettingsDir.mkpath(LocationSettingsDir);
+        QFile locationFile(LocationSettingsFile);
+        locationFile.open(QIODevice::WriteOnly);
+        locationFile.close();
     }
 
     // write the values to the conf file
     {
-        IniFile ini(LocationSettingsFile, CompatibilitySettingsFile);
+        IniFile ini(LocationSettingsFile);
 
         ini.writeBool(LocationSettingsSection, LocationSettingsEnabledKey, m_locationEnabled);
         ini.writeBool(LocationSettingsSection, LocationSettingsCustomModeKey, m_locationMode == LocationSettings::CustomMode);
