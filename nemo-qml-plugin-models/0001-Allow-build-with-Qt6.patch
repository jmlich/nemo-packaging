From e1abde37bc46a5c26a0f213d3b5aadacdc3c2afe Mon Sep 17 00:00:00 2001
From: Jozef Mlich <jmlich83@gmail.com>
Date: Thu, 31 Aug 2023 14:33:22 +0000
Subject: [PATCH] Allow build with Qt6

---
 .gitignore                                |  9 +++++++++
 src/lib/basefiltermodel.h                 |  4 +++-
 src/lib/compositemodel.h                  |  3 ++-
 src/lib/filtermodel.cpp                   | 12 ++++++++++++
 src/lib/filtermodel.h                     |  3 ++-
 src/lib/lib.pro                           |  9 ++++++---
 src/lib/nemomodels.h                      | 10 ++++++++++
 src/lib/objectlistmodel.h                 |  3 ++-
 src/lib/searchmodel.cpp                   | 13 +++++++++++++
 src/lib/searchmodel.h                     |  3 ++-
 src/lib/sortfiltermodel.h                 |  3 ++-
 src/plugin/plugin.pro                     |  2 +-
 tests/objectlistmodel/objectlistmodel.pro |  2 +-
 13 files changed, 65 insertions(+), 11 deletions(-)
 create mode 100644 .gitignore
 create mode 100644 src/lib/nemomodels.h

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..3029568
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,9 @@
+moc_*
+*.o
+Makefile
+libnemomodels-qt*.so*
+libnemomodels.so*
+tests/objectlistmodel/tst_objectlistmodel
+.qmake.stash
+src/lib/libnemomodels-qt*.prl
+src/lib/pkgconfig/
diff --git a/src/lib/basefiltermodel.h b/src/lib/basefiltermodel.h
index e28f7eb..6a4cf0b 100644
--- a/src/lib/basefiltermodel.h
+++ b/src/lib/basefiltermodel.h
@@ -33,12 +33,14 @@
 #ifndef BASEFILTERMODEL_H
 #define BASEFILTERMODEL_H
 
+#include <nemomodels.h>
+
 #include <QAbstractListModel>
 #include <QMetaProperty>
 
 #include <vector>
 
-class Q_DECL_EXPORT BaseFilterModel : public QAbstractListModel
+class NEMO_QML_PLUGIN_MODELS_EXPORT BaseFilterModel : public QAbstractListModel
 {
     Q_OBJECT
     Q_PROPERTY(QObject *sourceModel READ sourceModel WRITE setSourceModel NOTIFY sourceModelChanged)
diff --git a/src/lib/compositemodel.h b/src/lib/compositemodel.h
index de4d0e7..cb4b300 100644
--- a/src/lib/compositemodel.h
+++ b/src/lib/compositemodel.h
@@ -33,10 +33,11 @@
 #ifndef COMPOSITEMODEL_H
 #define COMPOSITEMODEL_H
 
+#include <nemomodels.h>
 #include <QAbstractListModel>
 #include <QVector>
 
-class Q_DECL_EXPORT CompositeModel : public QAbstractListModel
+class NEMO_QML_PLUGIN_MODELS_EXPORT CompositeModel : public QAbstractListModel
 {
     Q_OBJECT
     Q_PROPERTY(bool populated READ populated NOTIFY populatedChanged)
diff --git a/src/lib/filtermodel.cpp b/src/lib/filtermodel.cpp
index ef1d226..f80e7b4 100644
--- a/src/lib/filtermodel.cpp
+++ b/src/lib/filtermodel.cpp
@@ -226,10 +226,18 @@ bool FilterModel::passesFilter(int sourceRow, const FilterData &filter) const
         if ((value == filter.value_) == filter.negate_)
             return false;
     } else if (filter.comparator_ == FilterModel::LessThan) {
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+        if ((QVariant::compare(value, filter.value_) < 0) == filter.negate_)
+#else
         if ((value < filter.value_) == filter.negate_)
+#endif
             return false;
     } else if (filter.comparator_ == FilterModel::LessThanEqual) {
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+        if ((QVariant::compare(value, filter.value_) <= 0) == filter.negate_)
+#else
         if ((value <= filter.value_) == filter.negate_)
+#endif
             return false;
     } else if (filter.comparator_ == FilterModel::HasMatch) {
         if (re.match(value.toString()).hasMatch() == filter.negate_)
@@ -247,7 +255,11 @@ bool FilterModel::passesFilter(int sourceRow, const FilterData &filter) const
         };
 
         // List comparisons - fail only if no element meets the criterion
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+        if (static_cast<QMetaType::Type>(value.typeId()) == QMetaType::QStringList) {
+#else
         if (static_cast<QMetaType::Type>(value.type()) == QMetaType::QStringList) {
+#endif
             const QStringList elements(value.value<QStringList>());
             auto it = elements.cbegin(), end = elements.cend();
             for ( ; it != end; ++it) {
diff --git a/src/lib/filtermodel.h b/src/lib/filtermodel.h
index 6b524d8..8708eb2 100644
--- a/src/lib/filtermodel.h
+++ b/src/lib/filtermodel.h
@@ -33,12 +33,13 @@
 #ifndef FILTERMODEL_H
 #define FILTERMODEL_H
 
+#include <nemomodels.h>
 #include "basefiltermodel.h"
 
 #include <QList>
 #include <QMetaMethod>
 
-class Q_DECL_EXPORT FilterModel : public BaseFilterModel
+class NEMO_QML_PLUGIN_MODELS_EXPORT FilterModel : public BaseFilterModel
 {
     Q_OBJECT
     Q_PROPERTY(QVariantList filters READ filters WRITE setFilters NOTIFY filtersChanged)
diff --git a/src/lib/lib.pro b/src/lib/lib.pro
index 2282c72..717d5e7 100644
--- a/src/lib/lib.pro
+++ b/src/lib/lib.pro
@@ -1,5 +1,5 @@
 TEMPLATE = lib
-TARGET = nemomodels-qt5
+TARGET = nemomodels-qt$${QT_MAJOR_VERSION}
 
 CONFIG += create_pc create_prl link_pkgconfig
 
@@ -7,7 +7,7 @@ QT = \
     core \
     qml
 
-PKGCONFIG += mlocale5
+PKGCONFIG += mlocale$${QT_MAJOR_VERSION}
 
 INCLUDEPATH *= ../3rdparty
 
@@ -27,6 +27,8 @@ HEADERS += \
     searchmodel.h \
     sortfiltermodel.h
 
+DEFINES += BUILD_NEMO_QML_PLUGIN_MODELS_LIB
+
 target.path = $$[QT_INSTALL_LIBS]
 pkgconfig.files = $$TARGET.pc
 pkgconfig.path = $$target.path/pkgconfig
@@ -36,7 +38,8 @@ headers.files =\
     compositemodel.h \
     filtermodel.h \
     objectlistmodel.h \
-    searchmodel.h
+    searchmodel.h \
+    nemomodels.h
 
 QMAKE_PKGCONFIG_NAME = lib$$TARGET
 QMAKE_PKGCONFIG_DESCRIPTION = Library containing utility models for exposing data to QML
diff --git a/src/lib/nemomodels.h b/src/lib/nemomodels.h
new file mode 100644
index 0000000..9d72b59
--- /dev/null
+++ b/src/lib/nemomodels.h
@@ -0,0 +1,10 @@
+#ifndef NEMOMODELS_H
+#define NEMOMODELS_H
+
+#if defined(BUILD_NEMO_QML_PLUGIN_MODELS_LIB)
+    #define NEMO_QML_PLUGIN_MODELS_EXPORT Q_DECL_EXPORT
+#else
+    #define NEMO_QML_PLUGIN_MODELS_EXPORT Q_DECL_IMPORT
+#endif
+
+#endif // NEMOMODELS_H
\ No newline at end of file
diff --git a/src/lib/objectlistmodel.h b/src/lib/objectlistmodel.h
index ddd1724..4aa30d2 100644
--- a/src/lib/objectlistmodel.h
+++ b/src/lib/objectlistmodel.h
@@ -33,10 +33,11 @@
 #ifndef OBJECTLISTMODEL_H
 #define OBJECTLISTMODEL_H
 
+#include <nemomodels.h>
 #include <QAbstractListModel>
 #include <QVariantMap>
 
-class Q_DECL_EXPORT ObjectListModel : public QAbstractListModel
+class NEMO_QML_PLUGIN_MODELS_EXPORT ObjectListModel : public QAbstractListModel
 {
     Q_OBJECT
     Q_PROPERTY(bool automaticRoles READ automaticRoles WRITE setAutomaticRoles NOTIFY automaticRolesChanged)
diff --git a/src/lib/searchmodel.cpp b/src/lib/searchmodel.cpp
index c2d2e93..1e78fd6 100644
--- a/src/lib/searchmodel.cpp
+++ b/src/lib/searchmodel.cpp
@@ -222,7 +222,11 @@ QStringList toStringList(const QVariant &value)
 {
     QStringList rv;
 
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    if (static_cast<QMetaType::Type>(value.typeId()) == QMetaType::QStringList) {
+#else
     if (static_cast<QMetaType::Type>(value.type()) == QMetaType::QStringList) {
+#endif
         rv = value.value<QStringList>();
     } else if (value.canConvert<QVariantList>()) {
         QSequentialIterable iterable = value.value<QSequentialIterable>();
@@ -269,8 +273,13 @@ QList<QStringList> patternTokens(const QString &string, Qt::CaseSensitivity case
 static const QChar *cbegin(const QString &s) { return s.cbegin(); }
 static const QChar *cend(const QString &s) { return s.cend(); }
 
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+static const QChar *cbegin(const QStringView &r) { return r.data(); }
+static const QChar *cend(const QStringView &r) { return r.data() + r.size(); }
+#else
 static const QChar *cbegin(const QStringRef &r) { return r.data(); }
 static const QChar *cend(const QStringRef &r) { return r.data() + r.size(); }
+#endif
 
 template <typename StringType>
 bool partialMatch(const StringType &key, const QChar * const vbegin, const QChar * const vend)
@@ -329,7 +338,11 @@ bool partialMatch(const std::vector<const QString *> &tokens, const QString &val
             for (auto begin = token->cbegin(), it = begin, end = token->cend(); it != end; ) {
                 it = std::find(it, end, *vbegin);
                 if (it != end) {
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+                    const QStringView key = QStringView(&(*it), end - it);
+#else
                     const QStringRef key(token->midRef((it - begin)));
+#endif
                     if (partialMatch(key, vbegin, vend))
                         return true;
 
diff --git a/src/lib/searchmodel.h b/src/lib/searchmodel.h
index b1cde2f..9dec85a 100644
--- a/src/lib/searchmodel.h
+++ b/src/lib/searchmodel.h
@@ -33,6 +33,7 @@
 #ifndef SEARCHMODEL_H
 #define SEARCHMODEL_H
 
+#include <nemomodels.h>
 #include "basefiltermodel.h"
 
 #include <QList>
@@ -41,7 +42,7 @@
 #include <memory>
 #include <vector>
 
-class Q_DECL_EXPORT SearchModel : public BaseFilterModel
+class NEMO_QML_PLUGIN_MODELS_EXPORT SearchModel : public BaseFilterModel
 {
     Q_OBJECT
     Q_PROPERTY(QStringList searchRoles READ searchRoles WRITE setSearchRoles NOTIFY searchRolesChanged)
diff --git a/src/lib/sortfiltermodel.h b/src/lib/sortfiltermodel.h
index 93162a1..a9e3082 100644
--- a/src/lib/sortfiltermodel.h
+++ b/src/lib/sortfiltermodel.h
@@ -9,6 +9,7 @@
 #ifndef SORTFILTERMODEL_H
 #define SORTFILTERMODEL_H
 
+#include <nemomodels.h>
 #include <QAbstractItemModel>
 #include <QJSValue>
 #include <QSortFilterProxyModel>
@@ -18,7 +19,7 @@
  * @class SortFilterModel
  * @short Filter and sort an existing QAbstractItemModel
  */
-class Q_DECL_EXPORT SortFilterModel : public QSortFilterProxyModel
+class NEMO_QML_PLUGIN_MODELS_EXPORT SortFilterModel : public QSortFilterProxyModel
 {
     Q_OBJECT
     /**
diff --git a/src/plugin/plugin.pro b/src/plugin/plugin.pro
index 35a6455..39f13d7 100644
--- a/src/plugin/plugin.pro
+++ b/src/plugin/plugin.pro
@@ -8,7 +8,7 @@ QT = \
     qml
 
 INCLUDEPATH += ../lib
-LIBS += -L../lib -lnemomodels-qt5
+LIBS += -L../lib -lnemomodels-qt$${QT_MAJOR_VERSION}
 
 target.path = $$[QT_INSTALL_QML]/$$PLUGIN_IMPORT_PATH
 INSTALLS += target
diff --git a/tests/objectlistmodel/objectlistmodel.pro b/tests/objectlistmodel/objectlistmodel.pro
index 4e22a78..d274f23 100644
--- a/tests/objectlistmodel/objectlistmodel.pro
+++ b/tests/objectlistmodel/objectlistmodel.pro
@@ -11,7 +11,7 @@ SOURCES += \
 
 LIBS += \
     -L../../src/lib \
-    -lnemomodels-qt5
+    -lnemomodels-qt$${QT_MAJOR_VERSION}
 
 target.path = /opt/tests/nemo-qml-plugins/models
 INSTALLS += target
-- 
2.42.0

