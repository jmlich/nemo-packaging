diff --git a/config.pri b/config.pri
index b200d13..07f6a47 100644
--- a/config.pri
+++ b/config.pri
@@ -1,3 +1,3 @@
 CONFIG += link_pkgconfig
 
-PKGCONFIG += Qt5Contacts Qt5Versit qtcontacts-sqlite-qt5-extensions
+PKGCONFIG += Qt$${QT_MAJOR_VERSION}Contacts Qt$${QT_MAJOR_VERSION}Versit qtcontacts-sqlite-qt$${QT_MAJOR_VERSION}-extensions
diff --git a/lib/lib.pri b/lib/lib.pri
index 4d6251c..0289b81 100644
--- a/lib/lib.pri
+++ b/lib/lib.pri
@@ -3,13 +3,13 @@ include(../config.pri)
 CONFIG += qt hide_symbols
 CONFIG += link_pkgconfig
 
-packagesExist(mlite5) {
-    PKGCONFIG += mlite5
+packagesExist(mlite$${QT_MAJOR_VERSION}) {
+    PKGCONFIG += mlite$${QT_MAJOR_VERSION}
     DEFINES += HAS_MLITE
 } else {
     warning("mlite not available. Some functionality may not work as expected.")
 }
-PKGCONFIG += mlocale5 mce
+PKGCONFIG += mlocale$${QT_MAJOR_VERSION} mce
 LIBS += -lphonenumber
 
 
@@ -17,7 +17,7 @@ LIBS += -lphonenumber
 QT += contacts-private
 
 # We need the moc output for ContactManagerEngine from sqlite-extensions
-extensionsIncludePath = $$system(pkg-config --cflags-only-I qtcontacts-sqlite-qt5-extensions)
+extensionsIncludePath = $$system(pkg-config --cflags-only-I qtcontacts-sqlite-qt$${QT_MAJOR_VERSION}-extensions)
 VPATH += $$replace(extensionsIncludePath, -I, )
 HEADERS += \
     contactmanagerengine.h \
diff --git a/lib/lib.pro b/lib/lib.pro
index 02884e5..fe7c4e0 100644
--- a/lib/lib.pro
+++ b/lib/lib.pro
@@ -3,7 +3,7 @@ include(lib.pri)
 TEMPLATE = lib
 
 # 'contacts' is too generic for the target name - use 'contactcache'
-TARGET = contactcache-qt5
+TARGET = contactcache-qt$${QT_MAJOR_VERSION}
 target.path = $$[QT_INSTALL_LIBS]
 INSTALLS += target
 
@@ -12,6 +12,7 @@ DEFINES += CONTACTCACHE_BUILD
 CONFIG += create_pc create_prl no_install_prl
 
 QT -= gui
+QT += core
 
 develheaders.path = /usr/include/$$TARGET
 develheaders.files = $$PUBLIC_HEADERS
@@ -21,7 +22,7 @@ QMAKE_PKGCONFIG_DESCRIPTION = Sailfish OS contact cache library
 QMAKE_PKGCONFIG_LIBDIR = $$target.path
 QMAKE_PKGCONFIG_INCDIR = $$develheaders.path
 QMAKE_PKGCONFIG_DESTDIR = pkgconfig
-QMAKE_PKGCONFIG_REQUIRES = Qt5Core Qt5Contacts Qt5Versit qtcontacts-sqlite-qt5-extensions
+QMAKE_PKGCONFIG_REQUIRES = Qt$${QT_MAJOR_VERSION}Core Qt$${QT_MAJOR_VERSION}Contacts Qt$${QT_MAJOR_VERSION}Versit qtcontacts-sqlite-qt$${QT_MAJOR_VERSION}-extensions
 QMAKE_PKGCONFIG_VERSION = $$VERSION
 
 INSTALLS += develheaders
diff --git a/lib/seasidecache.cpp b/lib/seasidecache.cpp
index 701da32..d38c8de 100644
--- a/lib/seasidecache.cpp
+++ b/lib/seasidecache.cpp
@@ -1243,7 +1243,11 @@ void SeasideCache::decomposeDisplayLabel(const QString &formattedDisplayLabel, Q
 
     // Try to parse the structure from the formatted name
     // TODO: Use MBreakIterator for localized splitting
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    QStringList tokens(formattedDisplayLabel.split(QChar::fromLatin1(' '), Qt::SkipEmptyParts));
+#else
     QStringList tokens(formattedDisplayLabel.split(QChar::fromLatin1(' '), QString::SkipEmptyParts));
+#endif
     if (tokens.count() >= 2) {
         QString format;
         if (tokens.count() == 2) {
@@ -1863,7 +1867,11 @@ void SeasideCache::startRequest(bool *idleProcessing)
         } else {
             // Fetch the constituent information (even if they're already in the
             // cache, because we don't update non-aggregates on change notifications)
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+            m_fetchByIdRequest.setIds(m_constituentIds.values());
+#else
             m_fetchByIdRequest.setIds(m_constituentIds.toList());
+#endif
             m_fetchByIdRequest.start();
 
             m_fetchByIdProcessedCount = 0;
@@ -2523,7 +2531,11 @@ void SeasideCache::contactsAvailable()
     if (contacts.isEmpty())
         return;
 
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    QSet<QContactDetail::DetailType> queryDetailTypes = QSet<QContactDetail::DetailType>(detailTypesHint(fetchHint).begin(), detailTypesHint(fetchHint).end());
+#else
     QSet<QContactDetail::DetailType> queryDetailTypes = detailTypesHint(fetchHint).toSet();
+#endif
 
     if (request == &m_fetchRequest && m_populating) {
         Q_ASSERT(m_populateProgress > Unpopulated && m_populateProgress < Populated);
@@ -3050,7 +3062,12 @@ void SeasideCache::addressRequestStateChanged(QContactAbstractRequest::State sta
 
     // results are complete, so record them in the cache
     QContactFetchRequest *request = static_cast<QContactFetchRequest *>(sender());
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    QSet<QContactDetail::DetailType> queryDetailTypes = QSet<QContactDetail::DetailType>(detailTypesHint(request->fetchHint()).begin()
+                                                                                         , detailTypesHint(request->fetchHint()).end());
+#else
     QSet<QContactDetail::DetailType> queryDetailTypes = detailTypesHint(request->fetchHint()).toSet();
+#endif
     applyContactUpdates(request->contacts(), queryDetailTypes);
 
     // now figure out which address was being resolved and resolve it
diff --git a/lib/seasidepropertyhandler.cpp b/lib/seasidepropertyhandler.cpp
index 1934fa3..246ffcc 100644
--- a/lib/seasidepropertyhandler.cpp
+++ b/lib/seasidepropertyhandler.cpp
@@ -156,7 +156,11 @@ void processOnlineAccount(const QVersitProperty &property, bool *alreadyProcesse
     const QString detail(property.variantValue().toString());
 
     // The format is: URI/path/display-name/icon-path/service-provider/service-provider-display-name
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    const QStringList details(detail.split(QLatin1Char(';'), Qt::KeepEmptyParts));
+#else
     const QStringList details(detail.split(QLatin1Char(';'), QString::KeepEmptyParts));
+#endif
     if (details.count() == 6) {
         QContactOnlineAccount qcoa;
 
@@ -171,7 +175,11 @@ void processOnlineAccount(const QVersitProperty &property, bool *alreadyProcesse
         updatedDetails->append(qcoa);
 
         // Since it is a demo account, give it a random presence state
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+        const int state = (rand() % 4);
+#else
         const int state = (qrand() % 4);
+#endif
         QContactPresence presence;
         presence.setPresenceState(state == 3 ? QContactPresence::PresenceBusy : (state == 2 ? QContactPresence::PresenceAway : QContactPresence::PresenceAvailable));
         presence.setLinkedDetailUris(QStringList() << qcoa.detailUri());
diff --git a/src/plugin.cpp b/src/plugin.cpp
index 4f5e469..ccaf03e 100644
--- a/src/plugin.cpp
+++ b/src/plugin.cpp
@@ -93,7 +93,9 @@ class Q_DECL_EXPORT NemoContactsPlugin : public QQmlExtensionPlugin
         qmlRegisterType<SeasideFilteredModel>(uri, 1, 0, "PeopleModel");
         qmlRegisterType<SeasideAddressBookModel>(uri, 1, 0, "AddressBookModel");
         qmlRegisterType<SeasideDisplayLabelGroupModel>(uri, 1, 0, "PeopleDisplayLabelGroupModel");
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
         qmlRegisterType<SeasidePersonAttached>();
+#endif
         qmlRegisterType<SeasidePerson>(uri, 1, 0, "Person");
         qmlRegisterType<SeasideVCardModel>(uri, 1, 0, "PeopleVCardModel");
         qmlRegisterType<SeasideConstituentModel>(uri, 1, 0, "ConstituentModel");
diff --git a/src/seasideconstituentmodel.h b/src/seasideconstituentmodel.h
index 6e9a0b8..9e769e6 100644
--- a/src/seasideconstituentmodel.h
+++ b/src/seasideconstituentmodel.h
@@ -35,7 +35,12 @@
 #include "seasidesimplecontactmodel.h"
 
 class SeasidePerson;
-
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#ifndef DECLARE_SEASIDE_PERSON
+#define DECLARE_SEASIDE_PERSON
+Q_DECLARE_OPAQUE_POINTER(SeasidePerson)
+#endif
+#endif
 QTCONTACTS_USE_NAMESPACE
 
 class SeasideConstituentModel : public SeasideSimpleContactModel
@@ -65,5 +70,7 @@ class SeasideConstituentModel : public SeasideSimpleContactModel
     SeasidePerson *m_person = nullptr;
     SeasideCache::CacheItem *m_cacheItem = nullptr;
 };
-
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+Q_MOC_INCLUDE("seasideperson.h")
+#endif
 #endif
diff --git a/src/seasidefilteredmodel.cpp b/src/seasidefilteredmodel.cpp
index 13b3d3b..7b99835 100644
--- a/src/seasidefilteredmodel.cpp
+++ b/src/seasidefilteredmodel.cpp
@@ -491,10 +491,13 @@ struct FilterData : public SeasideCache::ItemListener
 
     static const QChar *cbegin(const QString &s) { return s.cbegin(); }
     static const QChar *cend(const QString &s) { return s.cend(); }
-
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    static const QChar *cbegin(const QStringView &r) { return r.data(); }
+    static const QChar *cend(const QStringView &r) { return r.data() + r.size(); }
+#else
     static const QChar *cbegin(const QStringRef &r) { return r.data(); }
     static const QChar *cend(const QStringRef &r) { return r.data() + r.size(); }
-
+#endif
     template<typename KeyType>
     static bool partialMatch(const KeyType &key, const QChar * const vbegin, const QChar * const vend)
     {
@@ -559,7 +562,11 @@ struct FilterData : public SeasideCache::ItemListener
                 const QChar initialChar(*vbegin);
                 int index = -1;
                 while ((index = token.indexOf(initialChar, index + 1)) != -1) {
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+                    if (partialMatch(QStringView(token).mid(index), vbegin, vend)) {
+#else
                     if (partialMatch(token.midRef(index), vbegin, vend)) {
+#endif
                         return true;
                     }
                 }
diff --git a/src/seasidemergecandidatemodel.h b/src/seasidemergecandidatemodel.h
index 80fcebf..0b1eaa5 100644
--- a/src/seasidemergecandidatemodel.h
+++ b/src/seasidemergecandidatemodel.h
@@ -35,7 +35,12 @@
 #include "seasidesimplecontactmodel.h"
 
 class SeasidePerson;
-
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#ifndef DECLARE_SEASIDE_PERSON
+#define DECLARE_SEASIDE_PERSON
+Q_DECLARE_OPAQUE_POINTER(SeasidePerson)
+#endif
+#endif
 QTCONTACTS_USE_NAMESPACE
 
 class SeasideMergeCandidateModel : public SeasideSimpleContactModel
@@ -65,5 +70,7 @@ class SeasideMergeCandidateModel : public SeasideSimpleContactModel
     SeasidePerson *m_person = nullptr;
     SeasideCache::CacheItem *m_cacheItem = nullptr;
 };
-
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+Q_MOC_INCLUDE("seasideperson.h")
+#endif
 #endif
diff --git a/src/seasideperson.cpp b/src/seasideperson.cpp
index 7cf52a3..cdce11c 100644
--- a/src/seasideperson.cpp
+++ b/src/seasideperson.cpp
@@ -463,7 +463,11 @@ QString SeasidePerson::department() const
 void SeasidePerson::setDepartment(const QString &department)
 {
     QStringList dept;
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    foreach (const QString &field, department.split(QChar::fromLatin1(';'), Qt::SkipEmptyParts)) {
+#else
     foreach (const QString &field, department.split(QChar::fromLatin1(';'), QString::SkipEmptyParts)) {
+#endif
         dept.append(field.trimmed());
     }
 
@@ -2306,8 +2310,11 @@ QStringList SeasidePerson::avatarUrlsExcluding(const QStringList &excludeMetadat
 
         urls.insert(avatar.imageUrl().toString());
     }
-
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    return urls.values();
+#else
     return urls.toList();
+#endif
 }
 
 /*!
diff --git a/src/seasidesimplecontactmodel.cpp b/src/seasidesimplecontactmodel.cpp
index ec36d70..c8e4c05 100644
--- a/src/seasidesimplecontactmodel.cpp
+++ b/src/seasidesimplecontactmodel.cpp
@@ -133,8 +133,13 @@ void SeasideSimpleContactModel::updateOrReset(const QList<int> &newContactIds)
         currentContactIds.append(contactInfo.cacheItem->iid);
     }
 
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    const QSet<int> currentIdSet = QSet<int>(currentContactIds.begin(), currentContactIds.end());
+    const QSet<int> newIdSet = QSet<int>(newContactIds.begin(), newContactIds.end());
+#else
     const QSet<int> currentIdSet = currentContactIds.toSet();
     const QSet<int> newIdSet = newContactIds.toSet();
+#endif
 
     if (currentIdSet == newIdSet) {
         return;
diff --git a/src/seasidevcardmodel.cpp b/src/seasidevcardmodel.cpp
index 10e301a..870a0c1 100644
--- a/src/seasidevcardmodel.cpp
+++ b/src/seasidevcardmodel.cpp
@@ -257,12 +257,13 @@ void SeasideVCardModel::readContacts()
     if (vcf.open(QIODevice::ReadOnly)) {
         // TODO: thread
         QVersitReader reader(&vcf);
-
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
         if (!mDefaultCodec.isEmpty()) {
             QTextCodec *codec = QTextCodec::codecForName(mDefaultCodec.toLatin1());
             if (codec)
                 reader.setDefaultCodec(codec);
         }
+#endif
 
         reader.startReading();
         reader.waitForFinished();
diff --git a/src/src.pro b/src/src.pro
index 69fbe80..38c65aa 100644
--- a/src/src.pro
+++ b/src/src.pro
@@ -9,17 +9,17 @@ CONFIG += qt plugin hide_symbols
 QT = \
     core  \
     qml
-PKGCONFIG += mlocale5 accounts-qt5
+PKGCONFIG += mlocale$${QT_MAJOR_VERSION} accounts-qt$${QT_MAJOR_VERSION}
 
-packagesExist(mlite5) {
-    PKGCONFIG += mlite5
+packagesExist(mlite$${QT_MAJOR_VERSION}) {
+    PKGCONFIG += mlite$${QT_MAJOR_VERSION}
     DEFINES += HAS_MLITE
 } else {
     warning("mlite not available. Some functionality may not work as expected.")
 }
 
 INCLUDEPATH += ../lib
-LIBS += -L../lib -lcontactcache-qt5
+LIBS += -L../lib -lcontactcache-qt$${QT_MAJOR_VERSION}
 
 target.path = $$[QT_INSTALL_QML]/$$PLUGIN_IMPORT_PATH
 INSTALLS += target
diff --git a/tests/basename.pri b/tests/basename.pri
index 3042682..f80eecd 100644
--- a/tests/basename.pri
+++ b/tests/basename.pri
@@ -1 +1 @@
-BASENAME=nemo-qml-plugins-qt5
+BASENAME=nemo-qml-plugins-qt$${QT_MAJOR_VERSION}
diff --git a/tests/common.pri b/tests/common.pri
index da74f38..2efebae 100644
--- a/tests/common.pri
+++ b/tests/common.pri
@@ -9,7 +9,7 @@ QT += testlib qml
 SRCDIR = $$PWD/../src/
 INCLUDEPATH += $$SRCDIR $$PWD/../lib/
 DEPENDPATH += $$INCLUDEPATH
-LIBS += -L$$PWD/../lib -lcontactcache-qt5
+LIBS += -L$$PWD/../lib -L../../lib -lcontactcache-qt$${QT_MAJOR_VERSION}
 
 target.path = /opt/tests/$${BASENAME}/contacts
 INSTALLS += target
diff --git a/tests/tst_seasidefilteredmodel/tst_seasidefilteredmodel.pro b/tests/tst_seasidefilteredmodel/tst_seasidefilteredmodel.pro
index 052b209..4b8e98b 100644
--- a/tests/tst_seasidefilteredmodel/tst_seasidefilteredmodel.pro
+++ b/tests/tst_seasidefilteredmodel/tst_seasidefilteredmodel.pro
@@ -1,6 +1,6 @@
 include(../common.pri)
 
-PKGCONFIG += mlocale5
+PKGCONFIG += mlocale$${QT_MAJOR_VERSION}
 
 CONFIG += c++11
 
diff --git a/tests/tst_seasideperson/tst_seasideperson.cpp b/tests/tst_seasideperson/tst_seasideperson.cpp
index 10dfb87..4053da4 100644
--- a/tests/tst_seasideperson/tst_seasideperson.cpp
+++ b/tests/tst_seasideperson/tst_seasideperson.cpp
@@ -678,7 +678,11 @@ void tst_SeasidePerson::birthday()
     QCOMPARE(spy.count(), 2);
     QCOMPARE(person->birthday(), QDateTime());
     QCOMPARE(person->property("birthday").toDateTime(), person->birthday());
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    person->setBirthday(QDateTime(QDate::fromString("05/01/1980", "dd/MM/yyyy").startOfDay()));
+#else
     person->setBirthday(QDateTime(QDate::fromString("05/01/1980", "dd/MM/yyyy")));
+#endif
     QCOMPARE(spy.count(), 3);
     QCOMPARE(person->birthday(), QDateTime::fromString("05/01/1980 12:00:00.000", "dd/MM/yyyy hh:mm:ss.zzz"));
     QCOMPARE(person->property("birthday").toDateTime(), person->birthday());
@@ -1084,7 +1088,11 @@ void tst_SeasidePerson::removeDuplicatePhoneNumbers()
             const QVariantMap detail(item.value<QVariantMap>());
             resultList.append(detail.value(phoneDetailNumber).toString());
         }
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+        QCOMPARE(QSet<QString>(resultList.begin(), resultList.end()), expectedSet);
+#else
         QCOMPARE(resultList.toSet(), expectedSet);
+#endif
     }
 }
 
@@ -1132,7 +1140,12 @@ void tst_SeasidePerson::removeDuplicateOnlineAccounts()
             const QString path(detail.value(accountDetailPath).toString());
             resultList.append(qMakePair(uri, path));
         }
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+        QSet<QPair<QString, QString> > resultSet = QSet<QPair<QString, QString> > (resultList.begin(), resultList.end());
+        QCOMPARE(resultSet, expected);
+#else
         QCOMPARE(resultList.toSet(), expected);
+#endif
     }
 }
 
@@ -1175,7 +1188,11 @@ void tst_SeasidePerson::removeDuplicateEmailAddresses()
             const QString addr(detail.value(emailDetailAddress).toString().trimmed().toLower());
             resultList.append(addr);
         }
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+        QCOMPARE(QSet<QString>(resultList.begin(), resultList.end()), expected);
+#else
         QCOMPARE(resultList.toSet(), expected);
+#endif
     }
 }
 
diff --git a/tools/common.pri b/tools/common.pri
index 385b7db..ac95169 100644
--- a/tools/common.pri
+++ b/tools/common.pri
@@ -5,4 +5,4 @@ CONFIG -= app_bundle
 
 INCLUDEPATH += $$PWD/../src/ $$PWD/../lib/
 DEPENDPATH += $$INCLUDEPATH
-LIBS += -L$$PWD/../lib -lcontactcache-qt5
+LIBS += -L$$PWD/../lib -L../../lib -lcontactcache-qt$${QT_MAJOR_VERSION}
diff --git a/tools/contacts-tool/main.cpp b/tools/contacts-tool/main.cpp
index 9550947..e7ee03e 100644
--- a/tools/contacts-tool/main.cpp
+++ b/tools/contacts-tool/main.cpp
@@ -81,7 +81,11 @@ QString delimiter(QString::fromLatin1("\n    "));
 void errorMessage(const QString &s)
 {
     QTextStream ts(stderr);
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    ts << s << Qt::endl;
+#else
     ts << s << endl;
+#endif
 }
 
 void invalidUsage(const QString &app)
@@ -130,8 +134,11 @@ const QList<QContactCollection>& managerCollections()
 QSet<quint32> parseIds(const QString &ids)
 {
     QSet<quint32> rv;
-
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    foreach (const QString &id, ids.split(QChar::fromLatin1(','), Qt::SkipEmptyParts)) {
+#else
     foreach (const QString &id, ids.split(QChar::fromLatin1(','), QString::SkipEmptyParts)) {
+#endif
         bool ok(false);
         quint32 value(id.toUInt(&ok));
         if (!ok) {
@@ -600,7 +607,9 @@ void printContactLinks(const QList<QContact> &contacts)
 
 QTextStream &utf8(QTextStream &ts)
 {
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
     ts.setCodec("UTF-8");
+#endif
     return ts;
 }
 
@@ -749,13 +758,18 @@ int deleteContacts(char **begin, char **end)
     }
 
     QTextStream output(stdout);
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    output << QString::fromLatin1("\nSelected contacts:\n") << Qt::flush;
+#else
     output << QString::fromLatin1("\nSelected contacts:\n") << flush;
-
+#endif
     QSet<quint32> contactIds(parseIds(begin, end));
     printContactSummary(manager().contacts(contactIdsFilter(contactIds)));
-
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    output << QString::fromLatin1("\nAre you sure you want to delete these contacts? (y/N):") << Qt::flush;
+#else
     output << QString::fromLatin1("\nAre you sure you want to delete these contacts? (y/N):") << flush;
-
+#endif
     QString confirmation;
     QTextStream(stdin) >> confirmation;
     if (confirmation == QString::fromLatin1("y")) {
diff --git a/tools/vcardconverter/main.cpp b/tools/vcardconverter/main.cpp
index 2c03e1a..13b73e5 100644
--- a/tools/vcardconverter/main.cpp
+++ b/tools/vcardconverter/main.cpp
@@ -62,7 +62,11 @@ namespace {
 void errorMessage(const QString &s)
 {
     QTextStream ts(stderr);
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    ts << s << Qt::endl;
+#else
     ts << s << endl;
+#endif
 }
 
 void invalidUsage(const QString &app)
diff --git a/tools/vcardconverter/vcardconverter.pro b/tools/vcardconverter/vcardconverter.pro
index 91c065f..94b9c43 100644
--- a/tools/vcardconverter/vcardconverter.pro
+++ b/tools/vcardconverter/vcardconverter.pro
@@ -1,5 +1,5 @@
 include(../common.pri)
-PKGCONFIG += qtcontacts-sqlite-qt5-extensions
+PKGCONFIG += qtcontacts-sqlite-qt$${QT_MAJOR_VERSION}-extensions
 
 TARGET = vcardconverter
 
diff --git a/translations/translations.pro b/translations/translations.pro
index 2d78d5b..026c7a4 100644
--- a/translations/translations.pro
+++ b/translations/translations.pro
@@ -3,7 +3,7 @@ TEMPLATE = aux
 TS_FILE = $$OUT_PWD/nemo-qml-plugin-contacts.ts
 EE_QM = $$OUT_PWD/nemo-qml-plugin-contacts_eng_en.qm
 
-ts.commands += lupdate $$PWD/.. -ts $$TS_FILE
+ts.commands += $$[QT_INSTALL_BINS]/lupdate $$PWD/.. -ts $$TS_FILE
 ts.CONFIG += no_check_exist no_link
 ts.output = $$TS_FILE
 ts.input = ..
@@ -13,7 +13,7 @@ ts_install.path = /usr/share/translations/source
 ts_install.CONFIG += no_check_exist
 
 # should add -markuntranslated "-" when proper translations are in place (or for testing)
-engineering_english.commands += lrelease -idbased $$TS_FILE -qm $$EE_QM
+engineering_english.commands += $$[QT_INSTALL_BINS]/lrelease -idbased $$TS_FILE -qm $$EE_QM
 engineering_english.CONFIG += no_check_exist no_link
 engineering_english.depends = ts
 engineering_english.input = $$TS_FILE