From 33c49b5211a97f8de281b942c699ee701afed4c0 Mon Sep 17 00:00:00 2001
From: Jozef Mlich <jmlich83@gmail.com>
Date: Wed, 30 Jun 2021 17:52:00 +0200
Subject: [PATCH] migrate to cmake

---
 CMakeLists.txt                                | 33 +++++++++
 lib/lib.pro                                   |  4 --
 lib/src/CMakeLists.txt                        | 36 ++++++++++
 lib/src/src.pro                               | 32 ---------
 oneshot/CMakeLists.txt                        |  2 +
 plugins/CMakeLists.txt                        |  5 ++
 plugins/declarative/CMakeLists.txt            |  2 +
 plugins/declarative/declarative.pro           |  4 --
 plugins/declarative/src/CMakeLists.txt        | 68 +++++++++++++++++++
 plugins/declarative/src/qmldir                |  2 +-
 plugins/declarative/src/src.pro               | 48 -------------
 plugins/declarative/test/CMakeLists.txt       |  0
 plugins/declarative/test/test.pro             |  3 -
 plugins/mce/CMakeLists.txt                    |  1 +
 plugins/mce/mce.pro                           |  5 --
 plugins/mce/src/CMakeLists.txt                | 18 +++++
 plugins/mce/src/src.pro                       | 14 ----
 plugins/ngf/CMakeLists.txt                    |  1 +
 plugins/ngf/ngf.pro                           |  4 --
 plugins/ngf/src/CMakeLists.txt                | 21 ++++++
 plugins/ngf/src/src.pro                       | 13 ----
 plugins/playback-manager/CMakeLists.txt       |  1 +
 plugins/playback-manager/playback-manager.pro |  4 --
 plugins/playback-manager/src/CMakeLists.txt   | 21 ++++++
 plugins/playback-manager/src/src.pro          | 15 ----
 plugins/plugin.pri                            | 19 ------
 plugins/plugins.pro                           |  6 --
 plugins/providers/CMakeLists.txt              |  2 +
 plugins/providers/ofono/CMakeLists.txt        |  1 +
 plugins/providers/ofono/ofono.pro             |  5 --
 plugins/providers/ofono/src/CMakeLists.txt    | 33 +++++++++
 plugins/providers/ofono/src/src.pro           | 22 ------
 plugins/providers/providers.pro               |  6 --
 plugins/providers/telepathy/CMakeLists.txt    |  1 +
 .../providers/telepathy/src/CMakeLists.txt    | 41 +++++++++++
 plugins/providers/telepathy/src/src.pro       | 24 -------
 plugins/providers/telepathy/telepathy.pro     |  2 -
 rpm/CMakeLists.txt                            |  3 +
 src/CMakeLists.txt                            | 38 +++++++++++
 src/src.pro                                   | 55 ---------------
 voicecall.pro                                 | 13 ----
 41 files changed, 329 insertions(+), 299 deletions(-)
 create mode 100644 CMakeLists.txt
 delete mode 100644 lib/lib.pro
 create mode 100644 lib/src/CMakeLists.txt
 delete mode 100644 lib/src/src.pro
 create mode 100644 oneshot/CMakeLists.txt
 create mode 100644 plugins/CMakeLists.txt
 create mode 100644 plugins/declarative/CMakeLists.txt
 delete mode 100644 plugins/declarative/declarative.pro
 create mode 100644 plugins/declarative/src/CMakeLists.txt
 delete mode 100644 plugins/declarative/src/src.pro
 create mode 100644 plugins/declarative/test/CMakeLists.txt
 delete mode 100644 plugins/declarative/test/test.pro
 create mode 100644 plugins/mce/CMakeLists.txt
 delete mode 100644 plugins/mce/mce.pro
 create mode 100644 plugins/mce/src/CMakeLists.txt
 delete mode 100644 plugins/mce/src/src.pro
 create mode 100644 plugins/ngf/CMakeLists.txt
 delete mode 100644 plugins/ngf/ngf.pro
 create mode 100644 plugins/ngf/src/CMakeLists.txt
 delete mode 100644 plugins/ngf/src/src.pro
 create mode 100644 plugins/playback-manager/CMakeLists.txt
 delete mode 100644 plugins/playback-manager/playback-manager.pro
 create mode 100644 plugins/playback-manager/src/CMakeLists.txt
 delete mode 100644 plugins/playback-manager/src/src.pro
 delete mode 100644 plugins/plugin.pri
 delete mode 100644 plugins/plugins.pro
 create mode 100644 plugins/providers/CMakeLists.txt
 create mode 100644 plugins/providers/ofono/CMakeLists.txt
 delete mode 100644 plugins/providers/ofono/ofono.pro
 create mode 100644 plugins/providers/ofono/src/CMakeLists.txt
 delete mode 100644 plugins/providers/ofono/src/src.pro
 delete mode 100644 plugins/providers/providers.pro
 create mode 100644 plugins/providers/telepathy/CMakeLists.txt
 create mode 100644 plugins/providers/telepathy/src/CMakeLists.txt
 delete mode 100644 plugins/providers/telepathy/src/src.pro
 delete mode 100644 plugins/providers/telepathy/telepathy.pro
 create mode 100644 rpm/CMakeLists.txt
 create mode 100644 src/CMakeLists.txt
 delete mode 100644 src/src.pro
 delete mode 100644 voicecall.pro

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..9a1e3a7
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,33 @@
+cmake_minimum_required(VERSION 3.6.0)
+
+project(voicecall
+	VERSION 0.7.11
+	DESCRIPTION "voicecall"
+	LANGUAGES CXX)
+
+
+set(CMAKE_CXX_STANDARD 11)
+set(CMAKE_CXX_STANDARD_REQUIRED ON)
+
+set(CMAKE_AUTOMOC ON)
+set(CMAKE_AUTORCC ON)
+
+set(CMAKE_INCLUDE_CURRENT_DIR ON)
+
+include(FeatureSummary)
+include(GNUInstallDirs)
+
+set(QT_MIN_VERSION "5.6.0")
+find_package(Qt5 COMPONENTS Core Quick DBus REQUIRED)
+find_package(Qt5Multimedia REQUIRED)
+find_package(PkgConfig REQUIRED)
+
+
+set(LIBVOICECALL_DIR "${PROJECT_SOURCE_DIR}/lib/src")
+
+add_subdirectory(lib/src)
+add_subdirectory(src)
+add_subdirectory(plugins)
+
+add_subdirectory(oneshot)
+add_subdirectory(rpm)
diff --git a/lib/lib.pro b/lib/lib.pro
deleted file mode 100644
index 882588c..0000000
--- a/lib/lib.pro
+++ /dev/null
@@ -1,4 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS = src
-
-OTHER_FILES = LICENSE
diff --git a/lib/src/CMakeLists.txt b/lib/src/CMakeLists.txt
new file mode 100644
index 0000000..516a42a
--- /dev/null
+++ b/lib/src/CMakeLists.txt
@@ -0,0 +1,36 @@
+
+set(QT_MIN_VERSION "5.6.0")
+find_package(Qt5 COMPONENTS Core DBus REQUIRED)
+
+
+set(VOICECALL_LIB_SOURCES
+    dbus/voicecallmanagerdbusadapter.cpp
+    dbus/voicecallhandlerdbusadapter.cpp
+    abstractvoicecallhandler.cpp
+    common.cpp
+)
+
+set(VOICECALL_LIB_HEADERS
+    common.h
+    voicecallmanagerinterface.h
+    abstractnotificationprovider.h
+    abstractvoicecallhandler.h
+    abstractvoicecallprovider.h
+    abstractvoicecallmanagerplugin.h
+    dbus/voicecallmanagerdbusadapter.h
+    dbus/voicecallhandlerdbusadapter.h
+)
+
+
+add_library(voicecall SHARED ${VOICECALL_LIB_SOURCES} ${VOICECALL_LIB_HEADERS})
+target_link_libraries(voicecall
+    Qt5::Core
+    Qt5::DBus
+)
+
+set_target_properties(voicecall PROPERTIES
+    VERSION ${PROJECT_VERSION}
+    SOVERSION ${PROJECT_VERSION_MAJOR})
+
+install(TARGETS voicecall
+    LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR})
diff --git a/lib/src/src.pro b/lib/src/src.pro
deleted file mode 100644
index 0b35b9b..0000000
--- a/lib/src/src.pro
+++ /dev/null
@@ -1,32 +0,0 @@
-TEMPLATE = lib
-TARGET = voicecall
-
-QT = core dbus
-
-CONFIG += c++11
-
-enable-debug {
-    DEFINES += WANT_TRACE
-}
-
-HEADERS += \
-    common.h \
-    voicecallmanagerinterface.h \
-    abstractnotificationprovider.h \
-    abstractvoicecallhandler.h \
-    abstractvoicecallprovider.h \
-    abstractvoicecallmanagerplugin.h \
-    dbus/voicecallmanagerdbusadapter.h \
-    dbus/voicecallhandlerdbusadapter.h
-
-SOURCES += \
-    dbus/voicecallmanagerdbusadapter.cpp \
-    dbus/voicecallhandlerdbusadapter.cpp \
-    abstractvoicecallhandler.cpp \
-    common.cpp
-
-target.path = $$[QT_INSTALL_LIBS]
-
-INSTALLS += target
-
-OTHER_FILES +=
diff --git a/oneshot/CMakeLists.txt b/oneshot/CMakeLists.txt
new file mode 100644
index 0000000..e897fed
--- /dev/null
+++ b/oneshot/CMakeLists.txt
@@ -0,0 +1,2 @@
+install(FILES phone-move-recordings-dir
+        DESTINATION ${CMAKE_INSTALL_LIBDIR}/oneshot.d/)
diff --git a/plugins/CMakeLists.txt b/plugins/CMakeLists.txt
new file mode 100644
index 0000000..e8fedd4
--- /dev/null
+++ b/plugins/CMakeLists.txt
@@ -0,0 +1,5 @@
+add_subdirectory(declarative)
+add_subdirectory(mce)
+add_subdirectory(ngf)
+add_subdirectory(playback-manager)
+add_subdirectory(providers)
\ No newline at end of file
diff --git a/plugins/declarative/CMakeLists.txt b/plugins/declarative/CMakeLists.txt
new file mode 100644
index 0000000..47f2510
--- /dev/null
+++ b/plugins/declarative/CMakeLists.txt
@@ -0,0 +1,2 @@
+add_subdirectory(src)
+add_subdirectory(test)
diff --git a/plugins/declarative/declarative.pro b/plugins/declarative/declarative.pro
deleted file mode 100644
index 383a84c..0000000
--- a/plugins/declarative/declarative.pro
+++ /dev/null
@@ -1,4 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS = src test
-
-OTHER_FILES += LICENSE
diff --git a/plugins/declarative/src/CMakeLists.txt b/plugins/declarative/src/CMakeLists.txt
new file mode 100644
index 0000000..e307304
--- /dev/null
+++ b/plugins/declarative/src/CMakeLists.txt
@@ -0,0 +1,68 @@
+SET(SRC
+    voicecallaudiorecorder.cpp
+    voicecallhandler.cpp
+    voicecallmanager.cpp
+    voicecallmodel.cpp
+    voicecallprovidermodel.cpp
+    voicecallplugin.cpp
+    ../../../lib/src/common.cpp
+)
+
+SET(HEADERS
+    voicecallaudiorecorder.h
+    voicecallhandler.h
+    voicecallmanager.h
+    voicecallmodel.h
+    voicecallprovidermodel.h
+    voicecallplugin.h
+)
+
+
+add_definitions(-DPLUGIN_NAME="voicecall-ofono-plugin")
+
+# FIXME debug
+#add_definitions(-DWANT_TRACE)
+
+# if enable-ngf
+    pkg_check_modules(NGF "ngf-qt5" REQUIRED)
+    add_definitions(-DWITH_NGF)
+# endif enable-ngf
+
+
+include_directories(${NGF_INCLUDE_DIRS} ${LIBVOICECALL_DIR})
+
+add_library(voicecalldeclarative SHARED ${SRC} ${HEADERS})
+add_dependencies(voicecalldeclarative voicecall)
+
+target_link_libraries(voicecalldeclarative PUBLIC
+    Qt5::Core
+    Qt5::DBus
+    Qt5::Multimedia
+    Qt5::Quick
+    ${NGF_LIBRARIES}
+    voicecall
+)
+
+
+#CONFIG += no_libvoicecall no_plugininstall
+#TARGET = voicecall
+#uri = org.nemomobile.voicecall
+#OTHER_FILES += qmldir
+
+function(FindQtInstallQml)
+    find_program(QMAKE NAMES qmake-qt5 qmake)
+    if(NOT QMAKE)
+        message(FATAL_ERROR "qmake not found")
+    endif()
+    execute_process(
+        COMMAND ${QMAKE} -query QT_INSTALL_QML
+        OUTPUT_VARIABLE PROC_RESULT
+        OUTPUT_STRIP_TRAILING_WHITESPACE
+    )
+    set(QT_INSTALL_QML ${PROC_RESULT} PARENT_SCOPE)
+endfunction()
+
+FindQtInstallQml()
+
+install(FILES qmldir DESTINATION ${QT_INSTALL_QML}/org/nemomobile/voicecall/)
+install(TARGETS voicecalldeclarative DESTINATION ${QT_INSTALL_QML}/org/nemomobile/voicecall/)
diff --git a/plugins/declarative/src/qmldir b/plugins/declarative/src/qmldir
index 7161493..ca171f0 100644
--- a/plugins/declarative/src/qmldir
+++ b/plugins/declarative/src/qmldir
@@ -1,2 +1,2 @@
 module org.nemomobile.voicecall
-plugin voicecall
+plugin voicecalldeclarative
diff --git a/plugins/declarative/src/src.pro b/plugins/declarative/src/src.pro
deleted file mode 100644
index d4f1b6e..0000000
--- a/plugins/declarative/src/src.pro
+++ /dev/null
@@ -1,48 +0,0 @@
-CONFIG += no_libvoicecall no_plugininstall
-include(../../plugin.pri)
-QT = core dbus qml multimedia
-
-TARGET = voicecall
-uri = org.nemomobile.voicecall
-
-enable-debug {
-    DEFINES += WANT_TRACE
-}
-
-enable-ngf {
-    PKGCONFIG += ngf-qt5
-    DEFINES += WITH_NGF
-}
-
-HEADERS += \
-    voicecallaudiorecorder.h \
-    voicecallhandler.h \
-    voicecallmanager.h \
-    voicecallmodel.h \
-    voicecallprovidermodel.h \
-    voicecallplugin.h
-
-SOURCES += \
-    voicecallaudiorecorder.cpp \
-    voicecallhandler.cpp \
-    voicecallmanager.cpp \
-    voicecallmodel.cpp \
-    voicecallprovidermodel.cpp \
-    voicecallplugin.cpp \
-    ../../../lib/src/common.cpp
-
-OTHER_FILES += qmldir
-
-!equals(_PRO_FILE_PWD_, $$OUT_PWD) {
-    copy_qmldir.target = $$OUT_PWD/qmldir
-    copy_qmldir.depends = $$_PRO_FILE_PWD_/qmldir
-    copy_qmldir.commands = $(COPY_FILE) \"$$replace(copy_qmldir.depends, /, $$QMAKE_DIR_SEP)\" \"$$replace(copy_qmldir.target, /, $$QMAKE_DIR_SEP)\"
-    QMAKE_EXTRA_TARGETS += copy_qmldir
-    PRE_TARGETDEPS += $$copy_qmldir.target
-}
-
-qmldir.files = qmldir
-installPath = $$[QT_INSTALL_QML]/$$replace(uri, \\., /)
-qmldir.path = $$installPath
-target.path = $$installPath
-INSTALLS += target qmldir
diff --git a/plugins/declarative/test/CMakeLists.txt b/plugins/declarative/test/CMakeLists.txt
new file mode 100644
index 0000000..e69de29
diff --git a/plugins/declarative/test/test.pro b/plugins/declarative/test/test.pro
deleted file mode 100644
index 68949f7..0000000
--- a/plugins/declarative/test/test.pro
+++ /dev/null
@@ -1,3 +0,0 @@
-TEMPLATE = subdirs
-
-OTHER_FILES += test.qml
diff --git a/plugins/mce/CMakeLists.txt b/plugins/mce/CMakeLists.txt
new file mode 100644
index 0000000..febd4f0
--- /dev/null
+++ b/plugins/mce/CMakeLists.txt
@@ -0,0 +1 @@
+add_subdirectory(src)
diff --git a/plugins/mce/mce.pro b/plugins/mce/mce.pro
deleted file mode 100644
index e44f4b6..0000000
--- a/plugins/mce/mce.pro
+++ /dev/null
@@ -1,5 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS = src
-
-OTHER_FILES += LICENSE
-
diff --git a/plugins/mce/src/CMakeLists.txt b/plugins/mce/src/CMakeLists.txt
new file mode 100644
index 0000000..c12fb18
--- /dev/null
+++ b/plugins/mce/src/CMakeLists.txt
@@ -0,0 +1,18 @@
+SET(SRC mceplugin.cpp)
+SET(HEADERS mceplugin.h)
+
+add_definitions(-DPLUGIN_NAME="mce-plugin")
+
+include_directories(${LIBVOICECALL_DIR})
+
+add_library(voicecall-mce-plugin SHARED ${SRC} ${HEADERS})
+add_dependencies(voicecall-mce-plugin voicecall)
+
+target_link_libraries(voicecall-mce-plugin PUBLIC
+    Qt5::Core
+    Qt5::DBus
+    voicecall
+)
+
+install(TARGETS voicecall-mce-plugin
+    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/voicecall/plugins)
diff --git a/plugins/mce/src/src.pro b/plugins/mce/src/src.pro
deleted file mode 100644
index 2451d7f..0000000
--- a/plugins/mce/src/src.pro
+++ /dev/null
@@ -1,14 +0,0 @@
-include(../../plugin.pri)
-TARGET = voicecall-mce-plugin
-
-QT += dbus
-
-DEFINES += PLUGIN_NAME=\\\"mce-plugin\\\"
-
-HEADERS += \
-    mceplugin.h
-
-SOURCES += \
-    mceplugin.cpp
-
-
diff --git a/plugins/ngf/CMakeLists.txt b/plugins/ngf/CMakeLists.txt
new file mode 100644
index 0000000..febd4f0
--- /dev/null
+++ b/plugins/ngf/CMakeLists.txt
@@ -0,0 +1 @@
+add_subdirectory(src)
diff --git a/plugins/ngf/ngf.pro b/plugins/ngf/ngf.pro
deleted file mode 100644
index c29cdd8..0000000
--- a/plugins/ngf/ngf.pro
+++ /dev/null
@@ -1,4 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS = src
-
-OTHER_FILES += LICENSE
diff --git a/plugins/ngf/src/CMakeLists.txt b/plugins/ngf/src/CMakeLists.txt
new file mode 100644
index 0000000..ccd5033
--- /dev/null
+++ b/plugins/ngf/src/CMakeLists.txt
@@ -0,0 +1,21 @@
+SET(SRC ngfringtoneplugin.cpp)
+SET(HEADERS ngfringtoneplugin.h)
+
+pkg_check_modules(NGF "ngf-qt5" REQUIRED)
+
+add_definitions(-DPLUGIN_NAME="ngf-plugin")
+
+include_directories(${NGF_INCLUDE_DIRS} ${LIBVOICECALL_DIR})
+
+add_library(voicecall-ngf-plugin SHARED ${SRC} ${HEADERS})
+add_dependencies(voicecall-ngf-plugin voicecall)
+
+target_link_libraries(voicecall-ngf-plugin PUBLIC
+    Qt5::Core
+    Qt5::DBus
+    ${NGF_LIBRARIES}
+    voicecall
+)
+
+install(TARGETS voicecall-ngf-plugin
+    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/voicecall/plugins)
diff --git a/plugins/ngf/src/src.pro b/plugins/ngf/src/src.pro
deleted file mode 100644
index 05a25e8..0000000
--- a/plugins/ngf/src/src.pro
+++ /dev/null
@@ -1,13 +0,0 @@
-include(../../plugin.pri)
-TARGET = voicecall-ngf-plugin
-
-PKGCONFIG += ngf-qt5
-
-DEFINES += PLUGIN_NAME=\\\"ngf-plugin\\\"
-
-HEADERS += \
-    ngfringtoneplugin.h
-
-SOURCES += \
-    ngfringtoneplugin.cpp
-
diff --git a/plugins/playback-manager/CMakeLists.txt b/plugins/playback-manager/CMakeLists.txt
new file mode 100644
index 0000000..febd4f0
--- /dev/null
+++ b/plugins/playback-manager/CMakeLists.txt
@@ -0,0 +1 @@
+add_subdirectory(src)
diff --git a/plugins/playback-manager/playback-manager.pro b/plugins/playback-manager/playback-manager.pro
deleted file mode 100644
index c29cdd8..0000000
--- a/plugins/playback-manager/playback-manager.pro
+++ /dev/null
@@ -1,4 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS = src
-
-OTHER_FILES += LICENSE
diff --git a/plugins/playback-manager/src/CMakeLists.txt b/plugins/playback-manager/src/CMakeLists.txt
new file mode 100644
index 0000000..dc671dc
--- /dev/null
+++ b/plugins/playback-manager/src/CMakeLists.txt
@@ -0,0 +1,21 @@
+SET(SRC playbackmanagerplugin.cpp)
+SET(HEADERS playbackmanagerplugin.h)
+
+add_definitions(-DPLUGIN_NAME="voicecall-playback-manager-plugin")
+
+# FIXME if debug
+# add_definitions(-DWANT_TRACE)
+
+include_directories(${LIBVOICECALL_DIR})
+
+add_library(voicecall-playback-manager-plugin SHARED ${SRC} ${HEADERS})
+add_dependencies(voicecall-playback-manager-plugin voicecall)
+
+target_link_libraries(voicecall-playback-manager-plugin PUBLIC
+    Qt5::Core
+    Qt5::DBus
+    voicecall
+)
+
+install(TARGETS voicecall-playback-manager-plugin
+    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/voicecall/plugins)
diff --git a/plugins/playback-manager/src/src.pro b/plugins/playback-manager/src/src.pro
deleted file mode 100644
index 601ac5d..0000000
--- a/plugins/playback-manager/src/src.pro
+++ /dev/null
@@ -1,15 +0,0 @@
-include(../../plugin.pri)
-TARGET = voicecall-playback-manager-plugin
-QT += dbus
-
-DEFINES += PLUGIN_NAME=\\\"voicecall-playback-manager-plugin\\\"
-
-enable-debug {
-    DEFINES += WANT_TRACE
-}
-
-HEADERS += \
-    playbackmanagerplugin.h
-
-SOURCES += \
-    playbackmanagerplugin.cpp
diff --git a/plugins/plugin.pri b/plugins/plugin.pri
deleted file mode 100644
index e5a974b..0000000
--- a/plugins/plugin.pri
+++ /dev/null
@@ -1,19 +0,0 @@
-TEMPLATE = lib
-QT = core
-CONFIG += plugin link_pkgconfig c++11
-
-QMAKE_CXXFLAGS += -std=c++0x
-
-# includes are ok all the time, yes, really.
-# it's only used for some macros.
-INCLUDEPATH += $$PWD/../lib/src
-
-!no_libvoicecall {
-    LIBS += -L$$PWD/../lib/src -lvoicecall
-}
-
-# used as e.g. the declarative plugin is a QML plugin, not a voicecall plugin
-!no_plugininstall {
-    target.path = $$[QT_INSTALL_LIBS]/voicecall/plugins
-    INSTALLS += target
-}
diff --git a/plugins/plugins.pro b/plugins/plugins.pro
deleted file mode 100644
index 13561e6..0000000
--- a/plugins/plugins.pro
+++ /dev/null
@@ -1,6 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS = declarative providers playback-manager mce
-
-enable-ngf {
-    SUBDIRS += ngf
-}
diff --git a/plugins/providers/CMakeLists.txt b/plugins/providers/CMakeLists.txt
new file mode 100644
index 0000000..56e84fb
--- /dev/null
+++ b/plugins/providers/CMakeLists.txt
@@ -0,0 +1,2 @@
+add_subdirectory(ofono)
+add_subdirectory(telepathy)
diff --git a/plugins/providers/ofono/CMakeLists.txt b/plugins/providers/ofono/CMakeLists.txt
new file mode 100644
index 0000000..febd4f0
--- /dev/null
+++ b/plugins/providers/ofono/CMakeLists.txt
@@ -0,0 +1 @@
+add_subdirectory(src)
diff --git a/plugins/providers/ofono/ofono.pro b/plugins/providers/ofono/ofono.pro
deleted file mode 100644
index e44f4b6..0000000
--- a/plugins/providers/ofono/ofono.pro
+++ /dev/null
@@ -1,5 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS = src
-
-OTHER_FILES += LICENSE
-
diff --git a/plugins/providers/ofono/src/CMakeLists.txt b/plugins/providers/ofono/src/CMakeLists.txt
new file mode 100644
index 0000000..cf1fc97
--- /dev/null
+++ b/plugins/providers/ofono/src/CMakeLists.txt
@@ -0,0 +1,33 @@
+SET(SRC
+    ofonovoicecallhandler.cpp
+    ofonovoicecallprovider.cpp
+    ofonovoicecallproviderfactory.cpp
+)
+
+SET(HEADERS
+    ofonovoicecallhandler.h
+    ofonovoicecallprovider.h
+    ofonovoicecallproviderfactory.h
+)
+
+pkg_check_modules(QOFONO "qofono-qt5 " REQUIRED)
+
+add_definitions(-DPLUGIN_NAME="voicecall-ofono-plugin")
+
+# FIXME debug
+#add_definitions(-DWANT_TRACE)
+
+include_directories(${QOFONO_INCLUDE_DIRS} ${LIBVOICECALL_DIR})
+
+add_library(voicecall-ofono-plugin SHARED ${SRC} ${HEADERS})
+add_dependencies(voicecall-ofono-plugin voicecall)
+
+target_link_libraries(voicecall-ofono-plugin PUBLIC
+    Qt5::Core
+    Qt5::DBus
+    ${QOFONO_LIBRARIES}
+    voicecall
+)
+
+install(TARGETS voicecall-ofono-plugin
+    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/voicecall/plugins)
diff --git a/plugins/providers/ofono/src/src.pro b/plugins/providers/ofono/src/src.pro
deleted file mode 100644
index e320bab..0000000
--- a/plugins/providers/ofono/src/src.pro
+++ /dev/null
@@ -1,22 +0,0 @@
-include(../../../plugin.pri)
-TARGET = voicecall-ofono-plugin
-QT += dbus
-
-PKGCONFIG += qofono-qt5
-
-enable-debug {
-    DEFINES += WANT_TRACE
-}
-
-HEADERS += \
-    ofonovoicecallhandler.h  \
-    ofonovoicecallprovider.h \
-    ofonovoicecallproviderfactory.h
-
-SOURCES += \
-    ofonovoicecallhandler.cpp \
-    ofonovoicecallprovider.cpp \
-    ofonovoicecallproviderfactory.cpp
-
-DEFINES += PLUGIN_NAME=\\\"voicecall-ofono-plugin\\\"
-
diff --git a/plugins/providers/providers.pro b/plugins/providers/providers.pro
deleted file mode 100644
index 9ca172b..0000000
--- a/plugins/providers/providers.pro
+++ /dev/null
@@ -1,6 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS = ofono
-
-enable-telepathy {
-    SUBDIRS += telepathy
-}
diff --git a/plugins/providers/telepathy/CMakeLists.txt b/plugins/providers/telepathy/CMakeLists.txt
new file mode 100644
index 0000000..febd4f0
--- /dev/null
+++ b/plugins/providers/telepathy/CMakeLists.txt
@@ -0,0 +1 @@
+add_subdirectory(src)
diff --git a/plugins/providers/telepathy/src/CMakeLists.txt b/plugins/providers/telepathy/src/CMakeLists.txt
new file mode 100644
index 0000000..9ffcbd4
--- /dev/null
+++ b/plugins/providers/telepathy/src/CMakeLists.txt
@@ -0,0 +1,41 @@
+SET(SRC
+    telepathyproviderplugin.cpp
+    telepathyprovider.cpp
+    farstreamchannel.cpp
+    callchannelhandler.cpp
+    streamchannelhandler.cpp
+    basechannelhandler.cpp
+)
+
+SET(HEADERS
+    telepathyproviderplugin.h
+    telepathyprovider.h
+    farstreamchannel.h
+    callchannelhandler.h
+    streamchannelhandler.h
+    basechannelhandler.h
+)
+
+pkg_check_modules(TELEPATHY "TelepathyQt5 " REQUIRED)
+pkg_check_modules(TELEPATHYFARSTREAM "TelepathyQt5Farstream" REQUIRED)
+
+add_definitions(-DPLUGIN_NAME="voicecall-telepathy-plugin")
+
+# FIXME debug
+#add_definitions(-DWANT_TRACE)
+
+include_directories(${TELEPATHY_INCLUDE_DIRS} ${TELEPATHYFARSTREAM_INCLUDE_DIRS} ${LIBVOICECALL_DIR})
+
+add_library(voicecall-telepathy-plugin SHARED ${SRC} ${HEADERS})
+add_dependencies(voicecall-telepathy-plugin voicecall)
+
+target_link_libraries(voicecall-telepathy-plugin PUBLIC
+    Qt5::Core
+    Qt5::DBus
+    ${TELEPATHY_LIBRARIES}
+    ${TELEPATHYFARSTREAM_LIBRARIES}
+    voicecall
+)
+
+install(TARGETS voicecall-telepathy-plugin
+    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/voicecall/plugins)
diff --git a/plugins/providers/telepathy/src/src.pro b/plugins/providers/telepathy/src/src.pro
deleted file mode 100644
index b4cf4f6..0000000
--- a/plugins/providers/telepathy/src/src.pro
+++ /dev/null
@@ -1,24 +0,0 @@
-include(../../../plugin.pri)
-TARGET = voicecall-telepathy-plugin
-
-PKGCONFIG += TelepathyQt5 TelepathyQt5Farstream
-
-#DEFINES += WANT_TRACE
-
-HEADERS += \
-    telepathyproviderplugin.h \
-    telepathyprovider.h \
-    farstreamchannel.h \
-    callchannelhandler.h \
-    streamchannelhandler.h \
-    basechannelhandler.h
-
-SOURCES += \
-    telepathyproviderplugin.cpp \
-    telepathyprovider.cpp \
-    farstreamchannel.cpp \
-    callchannelhandler.cpp \
-    streamchannelhandler.cpp \
-    basechannelhandler.cpp
-
-DEFINES += PLUGIN_NAME=\\\"voicecall-telepathy-plugin\\\"
diff --git a/plugins/providers/telepathy/telepathy.pro b/plugins/providers/telepathy/telepathy.pro
deleted file mode 100644
index 3330bde..0000000
--- a/plugins/providers/telepathy/telepathy.pro
+++ /dev/null
@@ -1,2 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS += src
diff --git a/rpm/CMakeLists.txt b/rpm/CMakeLists.txt
new file mode 100644
index 0000000..3bf8690
--- /dev/null
+++ b/rpm/CMakeLists.txt
@@ -0,0 +1,3 @@
+install(FILES voicecall-qt5.privileges
+        DESTINATION ${CMAKE_INSTALL_DATADIR}/mapplauncherd/privileges.d/)
+
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
new file mode 100644
index 0000000..e835b00
--- /dev/null
+++ b/src/CMakeLists.txt
@@ -0,0 +1,38 @@
+pkg_check_modules(RESOURCEQT "libresourceqt5" REQUIRED)
+pkg_check_modules(NEMODEVICELOCK "nemodevicelock" REQUIRED)
+pkg_check_modules(QT5BOOSTABLE "qt5-boostable" REQUIRED)
+
+
+include_directories(${RESOURCEQT_INCLUDE_DIRS} ${NEMODEVICELOCK_INCLUDE_DIRS} ${QT5BOOSTABLE_INCLUDE_DIRS} ${LIBVOICECALL_DIR})
+
+add_definitions(-DVOICECALL_PLUGIN_DIRECTORY="/usr/lib/voicecall/plugins")
+
+
+add_executable(voicecall-manager
+    main.cpp
+    audiocallpolicyproxy.cpp
+    basicvoicecallconfigurator.cpp
+    basicringtonenotificationprovider.cpp
+    voicecallmanager.cpp
+    dbus/voicecallmanagerdbusservice.cpp
+)
+add_dependencies(voicecall-manager voicecall)
+
+target_link_libraries(voicecall-manager PUBLIC
+    Qt5::Core
+    Qt5::DBus
+    Qt5::Multimedia
+    ${RESOURCEQT_LIBRARIES}
+    ${NEMODEVICELOCK_LIBRARIES}
+    ${QT5BOOSTABLE_LIBRARIES}
+    voicecall
+)
+
+set_property(TARGET voicecall-manager PROPERTY POSITION_INDEPENDENT_CODE TRUE) 
+
+
+install(TARGETS voicecall-manager RUNTIME
+    DESTINATION ${CMAKE_INSTALL_BINDIR})
+
+install(FILES voicecall-manager.service
+    DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/systemd/user/)
diff --git a/src/src.pro b/src/src.pro
deleted file mode 100644
index d50a6b1..0000000
--- a/src/src.pro
+++ /dev/null
@@ -1,55 +0,0 @@
-TARGET = voicecall-manager
-TEMPLATE = app
-QT = core dbus
-CONFIG += link_pkgconfig
-
-INCLUDEPATH += ../lib/src
-
-DEFINES += VOICECALL_PLUGIN_DIRECTORY=\"\\\"$$[QT_INSTALL_LIBS]/voicecall/plugins\\\"\"
-
-enable-nemo-devicelock {
-    PKGCONFIG += libresourceqt5 nemodevicelock
-    DEFINES += WITH_NEMO_DEVICELOCK
-}
-
-packagesExist(qt5-boostable) {
-    DEFINES += HAS_BOOSTER
-    PKGCONFIG += qt5-boostable
-} else {
-    warning("qt5-boostable not available; startup times will be slower")
-}
-
-QT += multimedia # for basic ringtone plugin.
-LIBS += -L../lib/src -lvoicecall
-
-HEADERS += \
-    dbus/voicecallmanagerdbusservice.h \
-    basicvoicecallconfigurator.h \
-    voicecallmanager.h \
-    basicringtonenotificationprovider.h
-
-SOURCES += \
-    dbus/voicecallmanagerdbusservice.cpp \
-    basicvoicecallconfigurator.cpp \
-    voicecallmanager.cpp \
-    main.cpp \
-    basicringtonenotificationprovider.cpp
-
-enable-audiopolicy {
-    HEADERS += audiocallpolicyproxy.h
-    SOURCES += audiocallpolicyproxy.cpp
-    DEFINES += WITH_AUDIOPOLICY
-}
-
-target.path = /usr/bin
-
-INSTALLS += target
-
-OTHER_FILES += voicecall-manager.desktop voicecall-manager.service
-
-systemd_service_entry.files = voicecall-manager.service
-systemd_service_entry.path = /usr/lib/systemd/user
-
-install-servicefiles {
-    INSTALLS += systemd_service_entry
-}
diff --git a/voicecall.pro b/voicecall.pro
deleted file mode 100644
index c158674..0000000
--- a/voicecall.pro
+++ /dev/null
@@ -1,13 +0,0 @@
-TEMPLATE = subdirs
-SUBDIRS += src lib plugins
-
-plugins.depends = lib
-src.depends = lib
-
-OTHER_FILES = LICENSE makedist rpm/voicecall-qt5.spec
-
-
-oneshot.files = oneshot/phone-move-recordings-dir
-oneshot.path  = $$[QT_INSTALL_PREFIX]/lib/oneshot.d
-
-INSTALLS += oneshot
-- 
2.32.0

